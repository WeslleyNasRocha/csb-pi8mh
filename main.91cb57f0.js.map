{"version":3,"sources":["js/select.js","js/results.js","js/request.js","js/main.js"],"names":["s","SelectsWidget","settings","selectorWrappers","document","querySelectorAll","selectors","options","init","onSelect","bindUiActions","forEach","el","addEventListener","querySelector","classList","toggle","contains","parentNode","remove","add","closest","textContent","id","value","dataset","window","e","select","target","module","exports","ResultsWidget","resultContainer","loadingModal","createElement","createLoadingModal","handleEmptyResults","innerHTML","require","showLoadingModal","visible","isLoading","Array","from","childNodes","includes","appendChild","removeChild","getToxicAttribute","toxicity","getSunAttribute","sun","getWaterAttribute","water","renderResults","data","results","sort","a","staff_favorite","url","name","price","style","setProperty","length","baseUrl","pets","setData","getData","getResults","fetch","then","response","ok","json","ele","getElementById","scrollTo","offsetLeft","offsetTop","request","req"],"mappings":"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","file":"main.91cb57f0.js","sourceRoot":"..","sourcesContent":["let s;\n\nconst SelectsWidget = {\n  settings: {\n    selectorWrappers: document.querySelectorAll(\".select\"),\n    selectors: document.querySelectorAll(\".select__component\"),\n    options: document.querySelectorAll(\".select__option\"),\n  },\n  init: function ({ onSelect }) {\n    s = this.settings;\n    this.bindUiActions({ onSelect });\n  },\n  bindUiActions: function ({ onSelect }) {\n    s.selectorWrappers.forEach(function (el) {\n      el.addEventListener(\"click\", function () {\n        this.querySelector(\".select__component\").classList.toggle(\"open\");\n      });\n    });\n    for (const option of s.options) {\n      option.addEventListener(\"click\", function () {\n        if (!this.classList.contains(\"selected\")) {\n          if (this.parentNode.querySelector(\".select__option.selected\")) {\n            this.parentNode\n              .querySelector(\".select__option.selected\")\n              .classList.remove(\"selected\");\n          }\n          this.classList.add(\"selected\");\n          this.closest(\".select__component\").querySelector(\n            \".select__trigger span\"\n          ).textContent = this.textContent;\n          if (onSelect) {\n            onSelect({\n              id: this.closest(\".select__component\").id,\n              value: this.dataset.value,\n            });\n          }\n        }\n      });\n    }\n\n    window.addEventListener(\"click\", function (e) {\n      s.selectors.forEach((select) => {\n        if (!select.contains(e.target)) {\n          select.classList.remove(\"open\");\n        }\n      });\n    });\n  },\n};\n\nmodule.exports = SelectsWidget;\n","let s;\n\nconst ResultsWidget = {\n  settings: {\n    resultContainer: document.querySelector(\".result\"),\n    loadingModal: document.createElement(\"div\"),\n  },\n  init: function () {\n    s = this.settings;\n    this.createLoadingModal();\n    this.handleEmptyResults();\n  },\n  createLoadingModal: function () {\n    s.loadingModal.classList.add(\"loading-modal\");\n    s.loadingModal.innerHTML = `<div class=\"loading-modal__ring\"><div></div><div></div><div></div><div></div></div>`;\n  },\n  handleEmptyResults: function () {\n    s.resultContainer.innerHTML = `<div class=\"result__empty-result\">\n        <div class=\"text-container\">\n          <h2 class=\"title\">No results yet...</h2>\n          <h3 class=\"subtitle\">\n            Use the filters above to find the plant that best fits your\n            environment :)\n          </h3>\n        </div>\n        <div class=\"image_no-result\">\n          <img src=\"${require(\"../images/illustrations/no-results.png\")}\" alt=\"no results\" />\n        </div>\n      </div>`;\n  },\n  showLoadingModal: function (visible) {\n    const isLoading = Array.from(s.resultContainer.childNodes).includes(\n      s.loadingModal\n    );\n    if (visible && !isLoading) {\n      s.resultContainer.appendChild(s.loadingModal);\n    } else if (!visible && isLoading) {\n      s.resultContainer.removeChild(s.loadingModal);\n    }\n  },\n  getToxicAttribute: function (toxicity) {\n    if (toxicity) {\n      return `<img src=\"${require(\"../images/icons/toxic.svg\")}\" alt=\"toxic\" />`;\n    }\n    return `<img src=\"${require(\"../images/icons/pet.svg\")}\" alt=\"pet friendly\" />`;\n  },\n  getSunAttribute: function (sun) {\n    switch (sun) {\n      case \"high\":\n        return `<img src=\"${require(\"../images/icons/high-sun.svg\")}\" alt=\"high sun\" />`;\n      case \"low\":\n        return `<img src=\"${require(\"../images/icons/low-sun.svg\")}\" alt=\"low sun\" />`;\n\n      case \"no\":\n      default:\n        return `<img src=\"${require(\"../images/icons/no-sun.svg\")}\" alt=\"no sun\" />`;\n    }\n  },\n  getWaterAttribute: function (water) {\n    switch (water) {\n      case \"daily\":\n        return `<img src=\"${require(\"../images/icons/3-drops.svg\")}\" alt=\"daily watering\" />`;\n      case \"regularly\":\n        return `<img src=\"${require(\"../images/icons/2-drops.svg\")}\" alt=\"regularly watering\" />`;\n\n      case \"rarely\":\n      default:\n        return `<img src=\"${require(\"../images/icons/1-drop.svg\")}\" alt=\"rarely watering\" />`;\n    }\n  },\n  renderResults: function (data) {\n    let results = \"\";\n    data\n      .sort((a) => (a.staff_favorite ? -1 : 0))\n      .forEach(({ url, name, price, toxicity, sun, water, staff_favorite }) => {\n        const el = `\n          <div class=\"card ${staff_favorite ? \"card_favorite\" : \"\"}\">\n            <div class=\"card__header ${\n              staff_favorite ? \"card__header_favorite\" : \"\"\n            }\">\n              <img class=\"card__image ${\n                staff_favorite ? \"card__image_favorite\" : \"\"\n              }\" src=\"${url}\" alt=\"${name}\" />\n              ${\n                staff_favorite\n                  ? \"<span class='card__favorite-badge'>✨ Staff favorite</span>\"\n                  : \"\"\n              }\n            </div>\n            <div class=\"card__details-container ${\n              staff_favorite ? \"card__details-container_favorite\" : \"\"\n            }\">\n              <p class=\"card__text ${\n                staff_favorite ? \"card__text_favorite\" : \"\"\n              }\">${name}</p>\n              <div class=\"card__details ${\n                staff_favorite ? \"card__details_favorite\" : \"\"\n              }\">\n                <p class=\"card__text card__text_small ${\n                  staff_favorite ? \"card__text_favorite\" : \"\"\n                }\">$${price}</p>\n                <div class=\"card__attributes ${\n                  staff_favorite ? \"card__attributes_favorite\" : \"\"\n                }\">\n                  ${this.getToxicAttribute(toxicity)}\n                  ${this.getSunAttribute(sun)}\n                  ${this.getWaterAttribute(water)}\n                </div>\n              </div>\n            </div>\n          </div>`;\n        results += el;\n      });\n\n    s.resultContainer.style.setProperty(\"--total\", data.length);\n\n    s.resultContainer.innerHTML = `\n      <div class=\"result__fullfiled-result\">\n        <img class=\"result__pick-image\" src=\"${require(\"../images/illustrations/pick.png\")}\" alt=\"Pick\" />\n        <h2 class=\"result__title\">Our picks for you</h2>\n        <div class=\"result__plants\">\n          ${results}\n        </div>\n        <a href=\"#filters\" class=\"back-to-top\">\n          <img src=\"${require(\"../images/icons/arrow-up.svg\")}\"/>\n          <p>back to the top</p>\n        </a>\n      </div>`;\n  },\n};\n\nmodule.exports = ResultsWidget;\n","const results = require(\"./results\");\n\nlet s;\n\nconst ResultsWidget = {\n  settings: {\n    baseUrl: \"https://front-br-challenges.web.app/api/v2/green-thumb\",\n    data: {\n      sun: null,\n      water: null,\n      pets: null\n    }\n  },\n  init: function () {\n    s = this.settings;\n    results.init();\n  },\n  setData: function ({ sun, water, pets } = {}) {\n    s.data = {\n      sun: sun ? sun : s.data.sun,\n      water: water ? water : s.data.water,\n      pets: pets ? pets : s.data.pets\n    };\n  },\n  getData: function () {\n    return s.data;\n  },\n  getResults: function () {\n    results.showLoadingModal(true);\n    const url = `${s.baseUrl}?sun=${s.data.sun}&water=${s.data.water}&pets=${s.data.pets}`;\n    fetch(url).then((response) => {\n      results.showLoadingModal(false);\n      if (response.ok) {\n        response.json().then((json) => {\n          results.renderResults(json);\n          var ele = document.getElementById(\"results\");\n          window.scrollTo(ele.offsetLeft, ele.offsetTop);\n        });\n      } else {\n        results.handleEmptyResults();\n      }\n    });\n  }\n};\n\nmodule.exports = ResultsWidget;\n","const select = require(\"./select\");\nconst request = require(\"./request\");\n\n(function () {\n  request.init();\n  select.init({\n    onSelect: (data) => {\n      request.setData({ [data.id]: data.value });\n      const req = request.getData();\n      if (req.sun && req.water && req.pets) {\n        request.getResults();\n      }\n    },\n  });\n})();\n"]}